;; to force quit kanata, press the following key combination: <LCtrl> + <Space> + <Esc>

;; kanata configurations
(defcfg
  ;; allows us to use the key that are not remapped with default behaviour
  process-unmapped-keys yes
)


;; define variables for tap times and hold times
(defvar
  default-tap-time 200
  default-hold-time 200
  tap-time 125
  hold-time 125
  fast-tap-time 80
  fast-hold-time 80
)

;; physical keyboard layout for Dell Latitude E7450 keyboard
(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  prnt ins  del
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl fn   lmet lalt           spc            ralt rctl pgup up   pgdn
                                                        left down rght
)


;; consider this function
(defalias
  ;; this will define caps lock key for a tab-hold behaviour
  ;; "tapping" within 80 will trigger <Esc>
  ;; "holding" within 65 will trigger <LCtrl>
  ;; cap_esc_ctrl (tap-hold 80 65 esc lctl)

  cap_esc_ctrl (tap-hold $tap-time-slow $hold-time-fast esc lctl)
  ;; "tapping" within 20 will trigger <Esc>
  ;; "holding" within 100 will trigger <RShift>

  rshift_bspc_shift (tap-hold $tap-time-fast $hold-time-slow bspc rsft)

  ;; make the layer variable
  right_alt (layer-while-held vim_arrows)
  ;; actually make the right alt key
  r_alt_hold_layer (tap-hold $tap-time-slow $hold-time-fast ralt @right_alt)
)


;; consider this "function" to be like our main function in Python
;; in this case the "function" is called `base` and we are "running" `lctl`
(deflayer base
  ;; basically run the alias "function"
  @cap_esc_ctrl
  @rshift_bspc_shift
  @r_alt_hold_layer
  _ ;; h
  _ ;; j
  _ ;; k
  _ ;; l
)


(deflayer vim_arrows
  _       ;; caps (position 1)
  _       ;; rsft (position 2)
  _       ;; ralt (position 3)
  left    ;; h (position 8)
  down    ;; j (position 9)
  up      ;; k (position 10)
  right   ;; l (position 11)
)
